{"file": "./setup.py", "line": 197, "col": 26, "module": "re", "call": "findall", "pattern": "^(([^!=<>~ ]+)(?:[!=<>~ ].*)?$)", "test_string": "Example likes !!A."}
{"file": "./utils/check_inits.py", "line": 50, "col": 14, "module": "re", "call": "compile", "pattern": "is\\_([a-z_]*)_available()", "test_string": "Example likes is m alpha."}
{"file": "./utils/check_inits.py", "line": 52, "col": 29, "module": "re", "call": "compile", "pattern": "^_import_structure\\s+=\\s+\\{([^\\}]+)\\}", "test_string": "Example likes alpha alpha=x{a}."}
{"file": "./utils/check_inits.py", "line": 54, "col": 30, "module": "re", "call": "compile", "pattern": "\\s+\"\\S*\":\\s+\\[([^\\]]*)\\]", "test_string": "Example likes x\"x\":x[a]."}
{"file": "./utils/check_inits.py", "line": 56, "col": 19, "module": "re", "call": "compile", "pattern": "^\\s*if\\s+not\\s+is\\_[a-z_]*\\_available\\(\\)", "test_string": "Example likes alpha m alpha()."}
{"file": "./utils/check_inits.py", "line": 58, "col": 28, "module": "re", "call": "compile", "pattern": "^\\s*_import_structure\\[\"\\S*\"\\]\\.append\\(\"(\\S*)\"\\)", "test_string": "Example likes x alpha alpha[\"x\"].alpha(\"x\")."}
{"file": "./utils/check_inits.py", "line": 60, "col": 29, "module": "re", "call": "compile", "pattern": "^\\s*_import_structure\\[\\S*\\](?:\\.extend\\(|\\s*=\\s+)\\[([^\\]]*)\\]", "test_string": "Example likes x alpha alpha[x].alpha([a]."}
{"file": "./utils/check_inits.py", "line": 62, "col": 19, "module": "re", "call": "compile", "pattern": "^\\s+\"([^\"]+)\",", "test_string": "Example likes x\"a\",."}
{"file": "./utils/check_inits.py", "line": 64, "col": 23, "module": "re", "call": "compile", "pattern": "^\\s+\\[([^\\]]+)\\]", "test_string": "Example likes x[a]."}
{"file": "./utils/check_inits.py", "line": 66, "col": 13, "module": "re", "call": "compile", "pattern": "\\s+from\\s+\\S*\\s+import\\s+([^\\(\\s].*)\\n", "test_string": "Example likes alpha(A."}
{"file": "./utils/check_inits.py", "line": 68, "col": 10, "module": "re", "call": "compile", "pattern": "^\\s*try:", "test_string": "Example likes alpha:."}
{"file": "./utils/check_inits.py", "line": 70, "col": 11, "module": "re", "call": "compile", "pattern": "^\\s*else:", "test_string": "Example likes alpha:."}
{"file": "./utils/check_inits.py", "line": 124, "col": 22, "module": "re", "call": "findall", "pattern": "\\[([^\\]]+)\\]", "test_string": "Example likes [a]."}
{"file": "./utils/check_inits.py", "line": 335, "col": 37, "module": "re", "call": "findall", "pattern": "import_structure\\[\\\"([^\\\"]*)\\\"\\]", "test_string": "Example likes alpha alpha[\"a\"]."}
{"file": "./utils/check_dummies.py", "line": 48, "col": 14, "module": "re", "call": "compile", "pattern": "is\\_([a-z_]*)_available()", "test_string": "Example likes is m alpha."}
{"file": "./utils/check_dummies.py", "line": 50, "col": 25, "module": "re", "call": "compile", "pattern": "\\s+from\\s+\\S*\\s+import\\s+([^\\(\\s].*)\\n", "test_string": "Example likes alpha(A."}
{"file": "./utils/check_dummies.py", "line": 52, "col": 19, "module": "re", "call": "compile", "pattern": "^\\s+if\\s+not\\s+\\(?is\\_[a-z_]*\\_available\\(\\)", "test_string": "Example likes alpha(is m alpha()."}
{"file": "./utils/check_config_docstrings.py", "line": 34, "col": 17, "module": "re", "call": "compile", "pattern": "\\[(.+?)\\]\\((https://huggingface\\.co/.+?)\\)", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 65, "col": 16, "module": "re", "call": "findall", "pattern": "https://huggingface\\.co/papers/\\d+\\.\\d+", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 66, "col": 17, "module": "re", "call": "findall", "pattern": "https://arxiv\\.org/abs/\\d+\\.\\d+", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 67, "col": 17, "module": "re", "call": "findall", "pattern": "https://arxiv\\.org/pdf/\\d+\\.\\d+", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 152, "col": 18, "module": "re", "call": "findall", "pattern": "https://arxiv\\.org/abs/(\\d+\\.\\d+)", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 153, "col": 19, "module": "re", "call": "findall", "pattern": "https://arxiv\\.org/pdf/(\\d+\\.\\d+)", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 72, "col": 26, "module": "re", "call": "findall", "pattern": "https://[^\\s\\)]+", "test_string": "http://example.com/docs"}
{"file": "./utils/add_dates.py", "line": 204, "col": 23, "module": "re", "call": "finditer", "pattern": "-->", "test_string": "Example likes >."}
{"file": "./utils/add_dates.py", "line": 212, "col": 27, "module": "re", "call": "finditer", "pattern": "-->", "test_string": "Example likes >."}
{"file": "./utils/scan_skipped_tests.py", "line": 55, "col": 19, "module": "re", "call": "search", "pattern": "reason\\s*=\\s*[\"\\'](.*?)[\"\\']", "test_string": "Example likes alpha=x\"A\"."}
{"file": "./utils/scan_skipped_tests.py", "line": 58, "col": 19, "module": "re", "call": "search", "pattern": "\\((?:.*?,\\s*)?[\"\\'](.*?)[\"\\']\\)", "test_string": "Example likes (A,x\"A\")."}
{"file": "./utils/scan_skipped_tests.py", "line": 70, "col": 14, "module": "re", "call": "compile", "pattern": "((?:^\\s*@.*?\\n)*?)^\\s*def\\s+(test_[A-Za-z0-9_]+)\\b", "test_string": "alice@example.com"}
{"file": "./utils/scan_skipped_tests.py", "line": 40, "col": 25, "module": "re", "call": "findall", "pattern": "^\\s*def\\s+(test_[A-Za-z0-9_]+)", "test_string": "Example likes alpha M."}
{"file": "./utils/update_metadata.py", "line": 55, "col": 16, "module": "re", "call": "compile", "pattern": "(.*)(?:Model|Encoder|Decoder|ForConditionalGeneration|ForRetrieval)", "test_string": "Example likes alpha."}
{"file": "./utils/modular_model_detector.py", "line": 579, "col": 14, "module": "re", "call": "compile", "pattern": "(?:^|[\\*_`\\s>])(?:this|the)\\s+model\\s+was\\s+released\\s+on\\s+(\\d{4}-\\d{2}-\\d{2})\\b", "test_string": "Example likes alpha xx xx."}
{"file": "./utils/modular_model_detector.py", "line": 171, "col": 11, "module": "re", "call": "sub", "pattern": "(\"\"\"|\\'\\'\\')(?:.|\\n)*?\\1", "test_string": "Example likes \"\"\"A\"\"\"."}
{"file": "./utils/modular_model_detector.py", "line": 172, "col": 11, "module": "re", "call": "sub", "pattern": "#.*", "test_string": "Example likes #A."}
{"file": "./utils/modular_model_detector.py", "line": 158, "col": 11, "module": "re", "call": "sub", "pattern": "[^a-z0-9]+", "test_string": "Example likes m."}
{"file": "./utils/modular_model_detector.py", "line": 186, "col": 15, "module": "re", "call": "findall", "pattern": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b", "test_string": "Example likes mm."}
{"file": "./utils/modular_model_detector.py", "line": 199, "col": 12, "module": "re", "call": "match", "pattern": "^([A-Z][a-z0-9]+)", "test_string": "Example likes Mm."}
{"file": "./utils/modular_model_detector.py", "line": 199, "col": 52, "module": "re", "call": "match", "pattern": "^([A-Za-z0-9]+)", "test_string": "Example likes M."}
{"file": "./utils/modular_model_detector.py", "line": 220, "col": 21, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./utils/modular_model_detector.py", "line": 226, "col": 25, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./utils/modular_model_detector.py", "line": 173, "col": 63, "module": "re", "call": "match", "pattern": "\\s*(from|import)\\s+", "test_string": "Example likes alpha."}
{"file": "./utils/sort_auto_mappings.py", "line": 45, "col": 20, "module": "re", "call": "compile", "pattern": "[A-Z_]+_MAPPING(\\s+|_[A-Z_]+\\s+)=\\s+OrderedDict", "test_string": "Example likes M alpha Mx=alpha."}
{"file": "./utils/sort_auto_mappings.py", "line": 47, "col": 17, "module": "re", "call": "compile", "pattern": "\\s*\\(\\s*\"(\\S[^\"]+)\"", "test_string": "Example likes x(x\"xa\"."}
{"file": "./utils/sort_auto_mappings.py", "line": 71, "col": 25, "module": "re", "call": "search", "pattern": "^(\\s*)\\S", "test_string": "Example likes xx."}
{"file": "./utils/modular_model_converter.py", "line": 1688, "col": 14, "module": "re", "call": "search", "pattern": "modular_(.*)(?=\\.py$)", "test_string": "Example likes alpha A.py."}
{"file": "./utils/modular_model_converter.py", "line": 130, "col": 11, "module": "re", "call": "findall", "pattern": "# Copied from", "test_string": "Example likes # alpha alpha."}
{"file": "./utils/modular_model_converter.py", "line": 993, "col": 15, "module": "re", "call": "match", "pattern": "\\ndef .*\\(.*\\):\\n    raise.*Error\\(.*", "test_string": "Example likes alpha A(A): alpha(A."}
{"file": "./utils/modular_model_converter.py", "line": 98, "col": 44, "module": "re", "call": "findall", "pattern": "[A-Z][^A-Z]*", "test_string": "Example likes MM."}
{"file": "./utils/modular_model_converter.py", "line": 282, "col": 32, "module": "re", "call": "sub", "pattern": "#.*", "test_string": "Example likes #A."}
{"file": "./utils/modular_model_converter.py", "line": 283, "col": 32, "module": "re", "call": "sub", "pattern": "\\ *\\n", "test_string": "Example likes ."}
{"file": "./utils/modular_model_converter.py", "line": 289, "col": 32, "module": "re", "call": "sub", "pattern": "#.*", "test_string": "Example likes #A."}
{"file": "./utils/modular_model_converter.py", "line": 290, "col": 32, "module": "re", "call": "sub", "pattern": "\\ *\\n", "test_string": "Example likes ."}
{"file": "./utils/modular_model_converter.py", "line": 306, "col": 32, "module": "re", "call": "sub", "pattern": "#.*", "test_string": "Example likes #A."}
{"file": "./utils/modular_model_converter.py", "line": 307, "col": 32, "module": "re", "call": "sub", "pattern": "\\ *\\n", "test_string": "Example likes ."}
{"file": "./utils/modular_model_converter.py", "line": 323, "col": 32, "module": "re", "call": "sub", "pattern": "#.*", "test_string": "Example likes #A."}
{"file": "./utils/modular_model_converter.py", "line": 324, "col": 32, "module": "re", "call": "sub", "pattern": "\\ *\\n", "test_string": "Example likes ."}
{"file": "./utils/modular_model_converter.py", "line": 1702, "col": 32, "module": "re", "call": "search", "pattern": "(src/transformers/.*|examples/.*)", "test_string": "/home/user/readme.txt"}
{"file": "./utils/modular_model_converter.py", "line": 166, "col": 50, "module": "re", "call": "search", "pattern": "\\\"\\\"\\\"[\\s\\S]*\\\"\\\"\\\"", "test_string": "Example likes \"\"\"x\"\"\"."}
{"file": "./utils/get_pr_run_slow_jobs.py", "line": 21, "col": 11, "module": "re", "call": "compile", "pattern": "src/transformers/(models/.*)/modeling_.*\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./utils/get_pr_run_slow_jobs.py", "line": 22, "col": 11, "module": "re", "call": "compile", "pattern": "src/transformers/(quantizers/quantizer_.*)\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./utils/get_pr_run_slow_jobs.py", "line": 25, "col": 11, "module": "re", "call": "compile", "pattern": "tests/(models/.*)/test_.*\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./utils/get_pr_run_slow_jobs.py", "line": 26, "col": 11, "module": "re", "call": "compile", "pattern": "tests/(quantization/.*)/test_.*\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./utils/get_pr_run_slow_jobs.py", "line": 29, "col": 11, "module": "re", "call": "compile", "pattern": "src/transformers/(models/.*)/.*\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./utils/notification_service_doc_tests.py", "line": 51, "col": 11, "module": "re", "call": "search", "pattern": "_ \\[doctest\\]", "test_string": "Example likes [alpha]."}
{"file": "./utils/release.py", "line": 60, "col": 17, "module": "re", "call": "compile", "pattern": "^check_min_version\\(\"[^\"]+\"\\)\\s*$", "test_string": "alpha alpha alpha(\"a\")x"}
{"file": "./utils/release.py", "line": 61, "col": 13, "module": "re", "call": "compile", "pattern": "^__version__\\s+=\\s+\"([^\"]+)\"\\s*$", "test_string": "alpha x=x\"a\"x"}
{"file": "./utils/release.py", "line": 62, "col": 14, "module": "re", "call": "compile", "pattern": "^(\\s*)version\\s*=\\s*\"[^\"]+\",", "test_string": "Example likes alpha=x\"a\",."}
{"file": "./utils/release.py", "line": 64, "col": 8, "module": "re", "call": "compile", "pattern": "^#     \"transformers(\\[.+\\])?.*$", "test_string": "# \"alpha[A]A"}
{"file": "./utils/release.py", "line": 68, "col": 8, "module": "re", "call": "compile", "pattern": "^#     \"transformers(\\[.+\\])?.*$", "test_string": "# \"alpha[A]A"}
{"file": "./utils/check_pipeline_typing.py", "line": 35, "col": 29, "module": "re", "call": "search", "pattern": "# <generated-code>(.*)# </generated-code>", "test_string": "/home/user/readme.txt"}
{"file": "./utils/check_pipeline_typing.py", "line": 39, "col": 25, "module": "re", "call": "search", "pattern": "def pipeline(.*) -> Pipeline:", "test_string": "Example likes alpha alpha > alpha:."}
{"file": "./utils/check_docstrings.py", "line": 70, "col": 11, "module": "re", "call": "compile", "pattern": "^\\s*(Args?|Arguments?|Attributes?|Params?|Parameters?):\\s*$", "test_string": "alpha:x"}
{"file": "./utils/check_docstrings.py", "line": 72, "col": 16, "module": "re", "call": "compile", "pattern": "^(\\s*)(\\S+)\\s+\\((.+)\\)(?:\\:|$)", "test_string": "Example likes alpha(A):."}
{"file": "./utils/check_docstrings.py", "line": 74, "col": 24, "module": "re", "call": "compile", "pattern": "\\*optional\\*, defaults to (.*)$", "test_string": "Example likes *alpha*, alpha to A."}
{"file": "./utils/check_docstrings.py", "line": 492, "col": 13, "module": "re", "call": "search", "pattern": "^(\\s*)(?:\\S|$)", "test_string": "Example likes xx."}
{"file": "./utils/check_docstrings.py", "line": 998, "col": 24, "module": "re", "call": "findall", "pattern": "[,(]\\s*(\\w+)\\s*(?=:|=|,|\\))", "test_string": "Example likes ,alpha:."}
{"file": "./utils/check_docstrings.py", "line": 1007, "col": 24, "module": "re", "call": "findall", "pattern": "^    (\\w+)(?:\\s*:|\\s*=|\\s*$)", "test_string": "Example likes xx:."}
{"file": "./utils/check_docstrings.py", "line": 707, "col": 11, "module": "re", "call": "search", "pattern": "^\\s*#\\s*no-format\\s*$", "test_string": "x#alpha alpha"}
{"file": "./utils/check_docstrings.py", "line": 1252, "col": 16, "module": "re", "call": "findall", "pattern": "custom_args=(\\w+)", "test_string": "Example likes alpha alpha=x."}
{"file": "./utils/check_docstrings.py", "line": 711, "col": 13, "module": "re", "call": "search", "pattern": "^\\s*#\\s*ignore-order\\s*$", "test_string": "x#alpha alpha"}
{"file": "./utils/check_docstrings.py", "line": 596, "col": 13, "module": "re", "call": "search", "pattern": "defaults to `?None`?", "test_string": "Example likes alpha to `alpha`."}
{"file": "./utils/compare_test_runs.py", "line": 22, "col": 12, "module": "re", "call": "match", "pattern": "^(SKIPPED|XFAIL|XPASS|EXPECTEDFAIL)\\s+\\[?\\d*\\]?\\s*(\\S+:\\d+)", "test_string": "Example likes alpha[x]xx:x."}
{"file": "./utils/compare_test_runs.py", "line": 29, "col": 15, "module": "re", "call": "split", "pattern": "\\s+-\\s+", "test_string": "Example likes x x."}
{"file": "./utils/check_copies.py", "line": 531, "col": 19, "module": "re", "call": "compile", "pattern": "^(\\s*)#\\s*Copied from\\s+transformers\\.(\\S+\\.\\S+)\\s*($|\\S.*$)", "test_string": "Example likes x#alpha alpha.x.alpha."}
{"file": "./utils/check_copies.py", "line": 532, "col": 33, "module": "re", "call": "compile", "pattern": "^(\\s*)#\\s*Copied from\\s+tests\\.(\\S+\\.\\S+)\\s*($|\\S.*$)", "test_string": "Example likes x#alpha alpha.x.alpha."}
{"file": "./utils/check_copies.py", "line": 533, "col": 22, "module": "re", "call": "compile", "pattern": "^\\s*(\\S+)->(\\S+)(\\s+.*|$)", "test_string": "Example likes xx >alpha."}
{"file": "./utils/check_copies.py", "line": 534, "col": 19, "module": "re", "call": "compile", "pattern": "<FILL\\s+[^>]*>", "test_string": "Example likes <alpha>."}
{"file": "./utils/check_copies.py", "line": 600, "col": 22, "module": "re", "call": "compile", "pattern": "class\\s+([^\\(:]+)(?:\\(|:)", "test_string": "Example likes alpha((."}
{"file": "./utils/check_copies.py", "line": 601, "col": 21, "module": "re", "call": "compile", "pattern": "def\\s+([^\\(]+)\\(", "test_string": "Example likes alpha(."}
{"file": "./utils/check_copies.py", "line": 931, "col": 23, "module": "re", "call": "compile", "pattern": "\\*\\*\\[([^\\]]*)\\]\\(([^\\)]*)\\)\\*\\* \\(from ([^)]*)\\)[^\\[]*([^\\)]*\\)).*?by (.*?[A-Za-z\\*]{2,}?)\\. (.*)$", "test_string": "Example likes **[a](a)** (alpha a)aa)alpha alpha. A."}
{"file": "./utils/check_copies.py", "line": 935, "col": 29, "module": "re", "call": "compile", "pattern": "\\*\\*\\[([^\\]]*)\\]\\(([^\\)]*)\\)\\*\\*", "test_string": "Example likes **[a](a)**."}
{"file": "./utils/check_copies.py", "line": 937, "col": 29, "module": "re", "call": "compile", "pattern": " \\[([^\\]]*)\\]\\(([^\\)]*)\\)", "test_string": "Example likes [a](a)."}
{"file": "./utils/check_copies.py", "line": 172, "col": 11, "module": "re", "call": "search", "pattern": "^\\s*\\)(\\s*->.*:|:)\\s*$", "test_string": "x)x >A:x"}
{"file": "./utils/check_copies.py", "line": 552, "col": 15, "module": "re", "call": "search", "pattern": "^(\\s*)\\S", "test_string": "Example likes xx."}
{"file": "./utils/check_copies.py", "line": 950, "col": 18, "module": "re", "call": "search", "pattern": "\\*\\*\\[([^\\]]*)", "test_string": "Example likes **[a."}
{"file": "./utils/check_copies.py", "line": 944, "col": 16, "module": "re", "call": "search", "pattern": "\\*\\*\\[([^\\]]*)", "test_string": "Example likes **[a."}
{"file": "./utils/custom_init_isort.py", "line": 48, "col": 13, "module": "re", "call": "compile", "pattern": "^(\\s*)\\S", "test_string": "Example likes xx."}
{"file": "./utils/custom_init_isort.py", "line": 50, "col": 17, "module": "re", "call": "compile", "pattern": "^\\s*\"([^\"]+)\":", "test_string": "Example likes x\"a\":."}
{"file": "./utils/custom_init_isort.py", "line": 52, "col": 19, "module": "re", "call": "compile", "pattern": "^\\s*_import_structure\\[\"([^\"]+)\"\\]", "test_string": "Example likes x alpha alpha[\"a\"]."}
{"file": "./utils/custom_init_isort.py", "line": 54, "col": 17, "module": "re", "call": "compile", "pattern": "^\\s*\"([^\"]+)\",\\s*$", "test_string": "x\"a\",x"}
{"file": "./utils/custom_init_isort.py", "line": 56, "col": 22, "module": "re", "call": "compile", "pattern": "\\[([^\\]]+)\\]", "test_string": "Example likes [a]."}
{"file": "./utils/add_pipeline_model_mapping_to_test.py", "line": 206, "col": 8, "module": "re", "call": "compile", "pattern": "\\s(is_\\S+?_available\\(\\))\\s", "test_string": "Example likes alpha x alpha()x."}
{"file": "./utils/tests_fetcher.py", "line": 541, "col": 35, "module": "re", "call": "compile", "pattern": "(?:^|\\n)\\s*from\\s+(\\.+\\S+)\\s+import\\s+([^\\n]+)(?=\\n)", "test_string": "Example likes alpha.alpha."}
{"file": "./utils/tests_fetcher.py", "line": 545, "col": 34, "module": "re", "call": "compile", "pattern": "(?:^|\\n)\\s*from\\s+(\\.+\\S+)\\s+import\\s+\\(([^\\)]+)\\)", "test_string": "Example likes alpha.alpha(a)."}
{"file": "./utils/tests_fetcher.py", "line": 551, "col": 33, "module": "re", "call": "compile", "pattern": "(?:^|\\n)\\s*from\\s+transformers(\\S*)\\s+import\\s+([^\\n]+)(?=\\n)", "test_string": "Example likes alpha."}
{"file": "./utils/tests_fetcher.py", "line": 555, "col": 32, "module": "re", "call": "compile", "pattern": "(?:^|\\n)\\s*from\\s+transformers(\\S*)\\s+import\\s+\\(([^\\)]+)\\)", "test_string": "Example likes alpha(a)."}
{"file": "./utils/tests_fetcher.py", "line": 1082, "col": 21, "module": "re", "call": "search", "pattern": "\\[([^\\]]*)\\]", "test_string": "Example likes [a]."}
{"file": "./utils/check_repo.py", "line": 869, "col": 16, "module": "re", "call": "compile", "pattern": "^\\s*@(\\S+)\\s+$", "test_string": "alice@example.com"}
{"file": "./utils/check_repo.py", "line": 618, "col": 17, "module": "re", "call": "findall", "pattern": "all_model_classes\\s+=\\s+\\(\\s*\\(([^\\)]*)\\)", "test_string": "Example likes alpha alpha alpha=x(x(a)."}
{"file": "./utils/check_repo.py", "line": 620, "col": 18, "module": "re", "call": "findall", "pattern": "all_model_classes\\s+=\\s+\\(([^\\)]*)\\)", "test_string": "Example likes alpha alpha alpha=x(a)."}
{"file": "./utils/check_repo.py", "line": 631, "col": 27, "module": "re", "call": "findall", "pattern": "base_model_class\\s+=.*", "test_string": "Example likes alpha alpha alpha=A."}
{"file": "./utils/check_repo.py", "line": 928, "col": 23, "module": "re", "call": "findall", "pattern": "\\[\\[autodoc\\]\\]\\s+(\\S+)\\s+", "test_string": "Example likes [[alpha]]alpha."}
{"file": "./utils/check_repo.py", "line": 937, "col": 46, "module": "re", "call": "findall", "pattern": "(?<=-\\s).*", "test_string": "Example likes A."}
{"file": "./utils/notification_service.py", "line": 1070, "col": 19, "module": "re", "call": "compile", "pattern": "\\(#(\\d+)\\)$", "test_string": "Example likes (#x)."}
{"file": "./utils/pr_slow_ci_models.py", "line": 100, "col": 10, "module": "re", "call": "compile", "pattern": "src/transformers/models/(.*)/modeling_.*\\.py", "test_string": "/home/user/readme.txt"}
{"file": "./benchmark/benchmark.py", "line": 82, "col": 17, "module": "re", "call": "search", "pattern": "/commit=([^/]+)", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/dynamic_module_utils.py", "line": 139, "col": 23, "module": "re", "call": "findall", "pattern": "^\\s*import\\s+\\.(\\S+)\\s*$", "test_string": "alpha.xx"}
{"file": "./src/transformers/dynamic_module_utils.py", "line": 141, "col": 24, "module": "re", "call": "findall", "pattern": "^\\s*from\\s+\\.(\\S+)\\s+import", "test_string": "Example likes alpha.alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 882, "col": 21, "module": "re", "call": "findall", "pattern": ".(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 890, "col": 15, "module": "re", "call": "sub", "pattern": ".(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 2624, "col": 11, "module": "re", "call": "search", "pattern": "class \\w+Attention\\(nn.Module\\)", "test_string": "Example likes alpha alpha(alpha)."}
{"file": "./src/transformers/modeling_utils.py", "line": 3970, "col": 18, "module": "re", "call": "compile", "pattern": "(.*?)-\\d{5}-of-\\d{5}", "test_string": "Example likes A alpha of alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 5789, "col": 27, "module": "re", "call": "sub", "pattern": "\\.\\d+\\.", "test_string": "Example likes .x.."}
{"file": "./src/transformers/modeling_utils.py", "line": 3844, "col": 34, "module": "re", "call": "sub", "pattern": "\\(.*\\)", "test_string": "Example likes (A)."}
{"file": "./src/transformers/modeling_utils.py", "line": 884, "col": 28, "module": "re", "call": "sub", "pattern": ".(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 885, "col": 25, "module": "re", "call": "sub", "pattern": ".(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/modeling_utils.py", "line": 886, "col": 21, "module": "re", "call": "sub", "pattern": ".(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/tokenization_utils_base.py", "line": 150, "col": 21, "module": "re", "call": "compile", "pattern": "tokenizer\\.(.*)\\.json", "test_string": "Example likes alpha.A.alpha."}
{"file": "./src/transformers/model_debugging_utils.py", "line": 52, "col": 23, "module": "re", "call": "compile", "pattern": "object at 0x[0-9A-Fa-f]+", "test_string": "Example likes alpha at 0xC."}
{"file": "./src/transformers/model_debugging_utils.py", "line": 188, "col": 18, "module": "re", "call": "compile", "pattern": "(.*)\\.(\\d+)$", "test_string": "Example likes A.x."}
{"file": "./src/transformers/testing_utils.py", "line": 1570, "col": 11, "module": "re", "call": "sub", "pattern": "^.*\\r", "test_string": "Example likes A."}
{"file": "./src/transformers/testing_utils.py", "line": 2435, "col": 13, "module": "re", "call": "sub", "pattern": "^gw", "test_string": "Example likes gw."}
{"file": "./src/transformers/testing_utils.py", "line": 2287, "col": 23, "module": "re", "call": "sub", "pattern": ".*_ _ _ (_ ){10,}_ _ ", "test_string": "Example likes A."}
{"file": "./src/transformers/testing_utils.py", "line": 2802, "col": 28, "module": "re", "call": "sub", "pattern": "(>>> .*load_dataset\\(.*)", "test_string": "Example likes >>> alpha alpha(A."}
{"file": "./src/transformers/testing_utils.py", "line": 2805, "col": 16, "module": "re", "call": "search", "pattern": "cuda|to\\(0\\)|device=0", "test_string": "Example likes alpha=0."}
{"file": "./src/transformers/modeling_gguf_pytorch_utils.py", "line": 338, "col": 22, "module": "re", "call": "sub", "pattern": "mlp.experts.\\d+.", "test_string": "Example likes alpha."}
{"file": "./src/transformers/trainer_utils.py", "line": 199, "col": 17, "module": "re", "call": "compile", "pattern": "^\" + PREFIX_CHECKPOINT_DIR + r\"\\-(\\d+)$", "test_string": "\" alpha alpha alpha r\" x"}
{"file": "./src/transformers/models/bertweet/tokenization_bertweet.py", "line": 589, "col": 10, "module": "re", "call": "compile", "pattern": "([^a-zA-Z0-9])\\1{3,}", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/bertweet/tokenization_bertweet.py", "line": 596, "col": 9, "module": "re", "call": "compile", "pattern": "&(#?(x?))([^&;\\s]+);", "test_string": "Example likes &#x&;."}
{"file": "./src/transformers/models/bertweet/tokenization_bertweet.py", "line": 737, "col": 14, "module": "re", "call": "compile", "pattern": "(.)\\1{2,}", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/bertweet/tokenization_bertweet.py", "line": 745, "col": 14, "module": "re", "call": "compile", "pattern": "(?<![A-Za-z0-9_!@#\\$%&*])@(([A-Za-z0-9_]){20}(?!@))|(?<![A-Za-z0-9_!@#\\$%&*])@(([A-Za-z0-9_]){1,19})(?![A-Za-z0-9_]*@)", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/bertweet/tokenization_bertweet.py", "line": 302, "col": 16, "module": "re", "call": "findall", "pattern": "\\S+\\n?", "test_string": "Example likes x."}
{"file": "./src/transformers/models/tapas/tokenization_tapas.py", "line": 2373, "col": 18, "module": "re", "call": "compile", "pattern": "((^|\\s)[+-])?((\\.\\d+)|(\\d+(,\\d\\d\\d)*(\\.\\d*)?))", "test_string": "Example likes x x,alpha.x."}
{"file": "./src/transformers/models/tapas/tokenization_tapas.py", "line": 2411, "col": 11, "module": "re", "call": "sub", "pattern": "Sept\\b", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/tapas/tokenization_tapas.py", "line": 2475, "col": 11, "module": "re", "call": "sub", "pattern": "[^\\w\\d]+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/tapas/convert_tapas_original_tf_checkpoint_to_pytorch.py", "line": 107, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/tapas/convert_tapas_original_tf_checkpoint_to_pytorch.py", "line": 108, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/markuplm/tokenization_markuplm.py", "line": 231, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/bloom/convert_bloom_original_checkpoint_to_pytorch.py", "line": 73, "col": 17, "module": "re", "call": "search", "pattern": "[^\\d](\\d+)$", "test_string": "Example likes xx."}
{"file": "./src/transformers/models/bloom/convert_bloom_original_checkpoint_to_pytorch.py", "line": 65, "col": 23, "module": "re", "call": "match", "pattern": ".*layer_(\\d*).*", "test_string": "Example likes alpha xA."}
{"file": "./src/transformers/models/fsmt/tokenization_fsmt.py", "line": 54, "col": 11, "module": "re", "call": "sub", "pattern": "。\\s*", "test_string": "Example likes 。x."}
{"file": "./src/transformers/models/fsmt/tokenization_fsmt.py", "line": 79, "col": 11, "module": "re", "call": "sub", "pattern": "．\\s*", "test_string": "Example likes ．x."}
{"file": "./src/transformers/models/fsmt/convert_fsmt_original_pytorch_checkpoint_to_pytorch.py", "line": 158, "col": 13, "module": "re", "call": "sub", "pattern": " \\d+$", "test_string": "Example likes x."}
{"file": "./src/transformers/models/fsmt/convert_fsmt_original_pytorch_checkpoint_to_pytorch.py", "line": 81, "col": 15, "module": "re", "call": "sub", "pattern": "@@$", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/fsmt/convert_fsmt_original_pytorch_checkpoint_to_pytorch.py", "line": 81, "col": 67, "module": "re", "call": "sub", "pattern": "$", "test_string": "Example likes ."}
{"file": "./src/transformers/models/mobilenet_v2/convert_original_tf_checkpoint_to_pytorch.py", "line": 215, "col": 14, "module": "re", "call": "match", "pattern": "^.*mobilenet_v2_([^_]*)_([^_]*)$", "test_string": "alpha v2 a a"}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 271, "col": 18, "module": "re", "call": "findall", "pattern": "(.*) = ([0-9.]*)", "test_string": "Example likes A = 4."}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 277, "col": 17, "module": "re", "call": "findall", "pattern": "(.*activations) = \\(\\'(.*)\\',\\)", "test_string": "Example likes alpha = ('A',)."}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 205, "col": 22, "module": "re", "call": "sub", "pattern": "layers_(\\d+)", "test_string": "Example likes alpha x."}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 212, "col": 26, "module": "re", "call": "sub", "pattern": "/mlp/", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 213, "col": 26, "module": "re", "call": "sub", "pattern": "/pre_mlp_layer_norm/", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 216, "col": 26, "module": "re", "call": "sub", "pattern": "/mlp/", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/switch_transformers/convert_switch_transformers_original_flax_checkpoint_to_pytorch.py", "line": 217, "col": 26, "module": "re", "call": "sub", "pattern": "/pre_mlp_layer_norm/", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/dac/convert_dac_checkpoint.py", "line": 160, "col": 31, "module": "re", "call": "findall", "pattern": "\\b\\d+\\b", "test_string": "Example likes x."}
{"file": "./src/transformers/models/dac/convert_dac_checkpoint.py", "line": 166, "col": 31, "module": "re", "call": "findall", "pattern": "\\b\\d+\\b", "test_string": "Example likes x."}
{"file": "./src/transformers/models/kosmos2/processing_kosmos2.py", "line": 443, "col": 31, "module": "re", "call": "finditer", "pattern": "<phrase>.+?</phrase>", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/kosmos2/processing_kosmos2.py", "line": 616, "col": 16, "module": "re", "call": "search", "pattern": "<patch_index_(\\d+)>", "test_string": "Example likes <alpha alpha x>."}
{"file": "./src/transformers/models/kosmos2/processing_kosmos2.py", "line": 617, "col": 16, "module": "re", "call": "search", "pattern": "<patch_index_(\\d+)>", "test_string": "Example likes <alpha alpha x>."}
{"file": "./src/transformers/models/roberta/tokenization_roberta.py", "line": 201, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/mm_grounding_dino/convert_mm_grounding_dino_to_hf.py", "line": 341, "col": 24, "module": "re", "call": "match", "pattern": "neck.extra_convs.(\\d+).gn.(weight|bias)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/mm_grounding_dino/convert_mm_grounding_dino_to_hf.py", "line": 346, "col": 24, "module": "re", "call": "match", "pattern": "neck.extra_convs.(\\d+).conv.(weight|bias)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/mm_grounding_dino/convert_mm_grounding_dino_to_hf.py", "line": 336, "col": 24, "module": "re", "call": "match", "pattern": "backbone.norm(\\d+).(weight|bias)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/mm_grounding_dino/convert_mm_grounding_dino_to_hf.py", "line": 364, "col": 20, "module": "re", "call": "match", "pattern": "bbox_head.(cls|reg)_branches.(\\d+).(.*)", "test_string": "Example likes alpha alpha alpha."}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 402, "col": 33, "module": "re", "call": "compile", "pattern": "(https?|ftp)(:\\/\\/[-_\\.!~*\\'()a-zA-Z0-9;\\/?:\\@&=\\+$,%#]+)", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 403, "col": 33, "module": "re", "call": "compile", "pattern": "[A-Za-z0-9\\._+]*@[\\-_0-9A-Za-z]+(\\.[A-Za-z]+)*", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 404, "col": 33, "module": "re", "call": "compile", "pattern": "[\\(]{0,1}[0-9]{2,4}[\\)\\-\\(]{0,1}[0-9]{2,4}[\\)\\-]{0,1}[0-9]{3,4}", "test_string": "Example-likes-(44-44-444."}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 405, "col": 33, "module": "re", "call": "compile", "pattern": "([12]\\d{3}[/\\-年])*(0?[1-9]|1[0-2])[/\\-月]((0?[1-9]|[12][0-9]|3[01])日?)*(\\d{1,2}|:|\\d{1,2}時|\\d{1,2}分|\\(日\\)|\\(月\\)|\\(火\\)|\\(水\\)|\\(木\\)|\\(金\\)|\\(土\\)|㈰|㈪|㈫|㈬|㈭|㈮|㈯)*", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 408, "col": 33, "module": "re", "call": "compile", "pattern": "(明治|大正|昭和|平成|令和|㍾|㍽|㍼|㍻|\\u32ff)\\d{1,2}年(0?[1-9]|1[0-2])月(0?[1-9]|[12][0-9]|3[01])日(\\d{1,2}|:|\\d{1,2}時|\\d{1,2}分|\\(日\\)|\\(月\\)|\\(火\\)|\\(水\\)|\\(木\\)|\\(金\\)|\\(土\\)|㈰|㈪|㈫|㈬|㈭|㈮|㈯)*", "test_string": "Example likes 明治x年05月05日x時."}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 415, "col": 37, "module": "re", "call": "compile", "pattern": "(?:\\d,\\d{3}|[\\d億])*+\"\n                r\"(?:\\d,\\d{3}|[\\d万])*+\"\n                r\"(?:\\d,\\d{3}|[\\d千])*+\"\n                r\"(?:千円|万円|千万円|円|千ドル|万ドル|千万ドル|ドル|千ユーロ|万ユーロ|千万ユーロ|ユーロ)+\"\n                r\"(?:\\(税込\\)|\\(税抜\\)|\\+tax)*", "test_string": "Example likes a\" r\"a\" r\"a\" r\"千万ユーロ\" r\"+alpha."}
{"file": "./src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py", "line": 423, "col": 37, "module": "re", "call": "compile", "pattern": "(?:\\d,\\d{3}|[\\d億万千])*\"\n                r\"(?:千円|万円|千万円|円|千ドル|万ドル|千万ドル|ドル|千ユーロ|万ユーロ|千万ユーロ|ユーロ)+\"\n                r\"(?:\\(税込\\)|\\(税抜\\)|\\+tax)*", "test_string": "Example likes x,alpha\" r\"千万ユーロ\" r\"+alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 100, "col": 31, "module": "re", "call": "compile", "pattern": "encoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(\\d).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 101, "col": 30, "module": "re", "call": "compile", "pattern": "encoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(\\d).model.(\\d*).model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 104, "col": 32, "module": "re", "call": "compile", "pattern": "encoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 106, "col": 32, "module": "re", "call": "compile", "pattern": "decoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(\\d).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 107, "col": 30, "module": "re", "call": "compile", "pattern": "decoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(\\d).model.(\\d*).model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 110, "col": 31, "module": "re", "call": "compile", "pattern": "decoders.(\\d*).level_blocks.(\\d*).model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 112, "col": 29, "module": "re", "call": "compile", "pattern": "conditioner_blocks.(\\d*).cond.model.(\\d*).(\\d).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 113, "col": 27, "module": "re", "call": "compile", "pattern": "conditioner_blocks.(\\d*).cond.model.(\\d*).(\\d).model.(\\d*).model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/convert_jukebox.py", "line": 116, "col": 28, "module": "re", "call": "compile", "pattern": "conditioner_blocks.(\\d*).cond.model.(\\d*).(bias|weight)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deprecated/jukebox/tokenization_jukebox.py", "line": 257, "col": 18, "module": "re", "call": "compile", "pattern": "_+", "test_string": "Example likes ."}
{"file": "./src/transformers/models/deprecated/jukebox/tokenization_jukebox.py", "line": 214, "col": 32, "module": "re", "call": "compile", "pattern": "[^A-Za-z0-9.,:;!?\\-'\\\"()\\[\\] \\t\\n]+", "test_string": "Example likes M."}
{"file": "./src/transformers/models/deprecated/jukebox/tokenization_jukebox.py", "line": 223, "col": 32, "module": "re", "call": "compile", "pattern": "[^A-Za-z0-9.,:;!?\\-+'\\\"()\\[\\] \\t\\n]+", "test_string": "Example likes M."}
{"file": "./src/transformers/models/deprecated/tapex/tokenization_tapex.py", "line": 293, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/deprecated/efficientformer/convert_efficientformer_original_pytorch_checkpoint_to_pytorch.py", "line": 53, "col": 33, "module": "re", "call": "search", "pattern": "\\d\\.\\d", "test_string": "Example likes x.x."}
{"file": "./src/transformers/models/deprecated/efficientformer/convert_efficientformer_original_pytorch_checkpoint_to_pytorch.py", "line": 81, "col": 35, "module": "re", "call": "search", "pattern": ".\\d.", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/deprecated/efficientformer/convert_efficientformer_original_pytorch_checkpoint_to_pytorch.py", "line": 56, "col": 20, "module": "re", "call": "search", "pattern": "\\d\\.\\d\\d.", "test_string": "Example likes x.alpha."}
{"file": "./src/transformers/models/deprecated/efficientformer/convert_efficientformer_original_pytorch_checkpoint_to_pytorch.py", "line": 58, "col": 20, "module": "re", "call": "search", "pattern": "\\d\\.\\d.", "test_string": "Example likes x.xA."}
{"file": "./src/transformers/models/mistral/convert_mistral_weights_to_hf.py", "line": 209, "col": 60, "module": "re", "call": "match", "pattern": "consolidated.\\d+.pth", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/siglip/tokenization_siglip.py", "line": 291, "col": 15, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/llama4/convert_llama4_weights_to_hf.py", "line": 435, "col": 17, "module": "re", "call": "search", "pattern": "(gate|up)_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/llama4/convert_llama4_weights_to_hf.py", "line": 437, "col": 27, "module": "re", "call": "sub", "pattern": "(gate|up)_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/llama4/convert_llama4_weights_to_hf.py", "line": 438, "col": 25, "module": "re", "call": "sub", "pattern": "(gate|up)_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/deepseek_vl/convert_deepseek_vl_weights_to_hf.py", "line": 141, "col": 18, "module": "re", "call": "search", "pattern": "(\\(.*?\\))", "test_string": "Example likes (A)."}
{"file": "./src/transformers/models/lxmert/convert_lxmert_original_tf_checkpoint_to_pytorch.py", "line": 74, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/lxmert/convert_lxmert_original_tf_checkpoint_to_pytorch.py", "line": 75, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/marian/convert_marian_tatoeba_to_pytorch.py", "line": 126, "col": 29, "module": "re", "call": "search", "pattern": "tuned4[^-]+", "test_string": "Example likes alpha4a."}
{"file": "./src/transformers/models/marian/convert_marian_tatoeba_to_pytorch.py", "line": 311, "col": 57, "module": "re", "call": "search", "pattern": "\\d\\d\\d\\d-\\d\\d?-\\d\\d?", "test_string": "Example likes alpha xx xx."}
{"file": "./src/transformers/models/bert/convert_bert_original_tf2_checkpoint_to_pytorch.py", "line": 196, "col": 11, "module": "re", "call": "match", "pattern": "(\\S+)\\.attention\\.self\\.(key|value|query)\\.(bias|weight)", "test_string": "Example likes x.alpha.alpha.alpha.alpha."}
{"file": "./src/transformers/models/bert/convert_bert_original_tf2_checkpoint_to_pytorch.py", "line": 196, "col": 91, "module": "re", "call": "match", "pattern": "(\\S+)\\.attention\\.output\\.dense\\.weight", "test_string": "Example likes x.alpha.alpha.alpha.alpha."}
{"file": "./src/transformers/models/ctrl/tokenization_ctrl.py", "line": 196, "col": 16, "module": "re", "call": "findall", "pattern": "\\S+\\n?", "test_string": "Example likes x."}
{"file": "./src/transformers/models/megatron_bert/convert_megatron_bert_checkpoint.py", "line": 153, "col": 15, "module": "re", "call": "compile", "pattern": "layers\\.(\\d+)\\.([a-z0-9_.]+)\\.([a-z]+)", "test_string": "Example likes alpha.x.m.m."}
{"file": "./src/transformers/models/mllama/convert_mllama_weights_to_hf.py", "line": 369, "col": 22, "module": "re", "call": "sub", "pattern": "layers.(\\d+).", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/rwkv/convert_rwkv_checkpoint_to_hf.py", "line": 60, "col": 15, "module": "re", "call": "sub", "pattern": "blocks\\.(\\d+)\\.att", "test_string": "Example likes alpha.x.alpha."}
{"file": "./src/transformers/models/rwkv/convert_rwkv_checkpoint_to_hf.py", "line": 62, "col": 15, "module": "re", "call": "sub", "pattern": "blocks\\.(\\d+)\\.ffn", "test_string": "Example likes alpha.x.alpha."}
{"file": "./src/transformers/models/glm4v/convert_glm4v_mgt_weights_to_hf.py", "line": 254, "col": 20, "module": "re", "call": "match", "pattern": "mp_rank_(\\d{2})", "test_string": "Example likes mp alpha xx."}
{"file": "./src/transformers/models/fastspeech2_conformer/tokenization_fastspeech2_conformer.py", "line": 103, "col": 15, "module": "re", "call": "sub", "pattern": "[\\(\\)\\[\\]\\<\\>\\\"]+", "test_string": "Example likes (."}
{"file": "./src/transformers/models/fastspeech2_conformer/tokenization_fastspeech2_conformer.py", "line": 106, "col": 15, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/timesfm/convert_timesfm_orignal_to_hf.py", "line": 27, "col": 16, "module": "re", "call": "match", "pattern": "(.*)\\[(\\d+)\\]", "test_string": "Example likes A[x]."}
{"file": "./src/transformers/models/mobilenet_v1/convert_original_tf_checkpoint_to_pytorch.py", "line": 148, "col": 14, "module": "re", "call": "match", "pattern": "^mobilenet_v1_([^_]*)_([^_]*)$", "test_string": "alpha v1 a a"}
{"file": "./src/transformers/models/electra/convert_electra_original_tf_checkpoint_to_pytorch.py", "line": 77, "col": 19, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/electra/convert_electra_original_tf_checkpoint_to_pytorch.py", "line": 78, "col": 34, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 71, "col": 11, "module": "re", "call": "sub", "pattern": "^\\(([\\d.]+[a-zA-Z]?)\\) \\\\\\[(.+?)\\\\\\]$", "test_string": "(.m) \\[A\\]"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 73, "col": 11, "module": "re", "call": "sub", "pattern": "^\\\\\\[(.+?)\\\\\\] \\(([\\d.]+[a-zA-Z]?)\\)$", "test_string": "\\[A\\] (.m)"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 75, "col": 11, "module": "re", "call": "sub", "pattern": "^\\\\\\[(.+?)\\\\\\] \\(([\\d.]+[a-zA-Z]?)\\) (\\\\\\[.+?\\\\\\])$", "test_string": "\\[A\\] (.m) \\[A\\]"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 85, "col": 11, "module": "re", "call": "sub", "pattern": "\\\\mbox{ ?\\\\boldmath\\$(.*?)\\$}", "test_string": "Example likes \\alpha{ \\alpha$A$}."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 87, "col": 11, "module": "re", "call": "sub", "pattern": "((?:http|ftp|https):\\/\\/(?:[\\w_-]+(?:(?:\\.[\\w_-]+)+))(?:[\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-]))", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 93, "col": 11, "module": "re", "call": "sub", "pattern": "```\\s*(.+?)\\s*```", "test_string": "Example likes ```alpha```."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 119, "col": 16, "module": "re", "call": "search", "pattern": ". ([-*]) ", "test_string": "Example likes A."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 446, "col": 15, "module": "re", "call": "sub", "pattern": "## References\\n+\\[MISSING_PAGE_POST(:\\d+)?\\]", "test_string": "Example likes ## alpha\n[alpha alpha alpha:x]."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 480, "col": 21, "module": "re", "call": "sub", "pattern": "(^.+)\\\\begin{tab", "test_string": "Example likes A\\alpha{alpha."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 500, "col": 21, "module": "re", "call": "sub", "pattern": "(?:\\n|^)#+ \\d*\\W? ?(.{100,})", "test_string": "Example likes # xx alpha."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 508, "col": 21, "module": "re", "call": "sub", "pattern": "^#+ (?:[\\d+\\.]+|[ixv\\.]+)?\\s*(?:$|\\n\\s*)", "test_string": "Example likes # ix\nx."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 519, "col": 21, "module": "re", "call": "sub", "pattern": "^\\* \\[\\d+\\](\\s?[A-W]\\.+\\s?){10,}.*$", "test_string": "* [x]xL.alpha.alpha.alpha.alpha.xA"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 521, "col": 21, "module": "re", "call": "sub", "pattern": "^(\\* \\[\\d+\\])\\[\\](.*)$", "test_string": "* [x][]A"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 523, "col": 21, "module": "re", "call": "sub", "pattern": "(^\\w\\n\\n|\\n\\n\\w$)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 525, "col": 21, "module": "re", "call": "sub", "pattern": "([\\s.,()])_([a-zA-Z0-9])__([a-zA-Z0-9]){1,3}_([\\s.,:()])", "test_string": "Example likes . m m .."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 530, "col": 21, "module": "re", "call": "sub", "pattern": "([\\s.,\\d])_([a-zA-Z0-9])_([\\s.,\\d;])", "test_string": "Example likes . m .."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 532, "col": 21, "module": "re", "call": "sub", "pattern": "(\\nFootnote .*?:) (?:footnotetext|thanks):\\W*(.*(?:\\n\\n|$))", "test_string": "Example likes alpha A: alpha:xA."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 538, "col": 21, "module": "re", "call": "sub", "pattern": "\\[FOOTNOTE:.+?\\](.*?)\\[ENDFOOTNOTE\\]", "test_string": "Example likes [alpha:A]A[alpha]."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 544, "col": 11, "module": "re", "call": "match", "pattern": "[A-Z0-9,;:]$", "test_string": "Example likes M."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 565, "col": 21, "module": "re", "call": "sub", "pattern": "\\\\begin{tabular}{([clr ]){2,}}\\s*[& ]*\\s*(\\\\\\\\)? \\\\end{tabular}", "test_string": "Example likes \\alpha{alpha}{cc}x&x\\\\ \\alpha{alpha}."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 571, "col": 21, "module": "re", "call": "sub", "pattern": "(\\*\\*S\\. A\\. B\\.\\*\\*\\n+){2,}", "test_string": "Example likes **S. A. B.**\n**S. A. B.**."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 573, "col": 21, "module": "re", "call": "sub", "pattern": "^#+( [\\[\\d\\w])?$", "test_string": "# ["}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 575, "col": 21, "module": "re", "call": "sub", "pattern": "^\\.\\s*$", "test_string": ".x"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 577, "col": 21, "module": "re", "call": "sub", "pattern": "\\n{3,}", "test_string": "Example likes ."}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 134, "col": 15, "module": "re", "call": "match", "pattern": "^[\\dixv]+((?:\\.[\\dixv])?)+$", "test_string": "i.i"}
{"file": "./src/transformers/models/nougat/tokenization_nougat_fast.py", "line": 237, "col": 15, "module": "re", "call": "sub", "pattern": "(?:[\\d_]|\\*\\*)", "test_string": "Example likes ."}
{"file": "./src/transformers/models/t5/convert_t5_original_tf_checkpoint_to_pytorch.py", "line": 74, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/t5/convert_t5_original_tf_checkpoint_to_pytorch.py", "line": 75, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/t5/tokenization_t5_fast.py", "line": 226, "col": 38, "module": "re", "call": "search", "pattern": "<extra_id_\\d+>", "test_string": "Example likes <alpha id x>."}
{"file": "./src/transformers/models/t5/tokenization_t5.py", "line": 278, "col": 38, "module": "re", "call": "search", "pattern": "<extra_id_\\d+>", "test_string": "Example likes <alpha id x>."}
{"file": "./src/transformers/models/blenderbot/tokenization_blenderbot.py", "line": 207, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/speecht5/number_normalizer.py", "line": 186, "col": 15, "module": "re", "call": "sub", "pattern": "(\\d+,\\d+)", "test_string": "Example likes x,x."}
{"file": "./src/transformers/models/deepseek_vl_hybrid/convert_deepseek_vl_hybrid_weights_to_hf.py", "line": 168, "col": 18, "module": "re", "call": "search", "pattern": "(\\(.*?\\))", "test_string": "Example likes (A)."}
{"file": "./src/transformers/models/mvp/tokenization_mvp.py", "line": 193, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/gpt_neo/convert_gpt_neo_mesh_tf_to_pytorch.py", "line": 74, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+\\d+", "test_string": "Example likes Mx."}
{"file": "./src/transformers/models/gpt_neo/convert_gpt_neo_mesh_tf_to_pytorch.py", "line": 75, "col": 30, "module": "re", "call": "split", "pattern": "(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/auto/configuration_auto.py", "line": 1190, "col": 33, "module": "re", "call": "search", "pattern": "^(\\s*)List options\\s*$", "test_string": "alpha alpha"}
{"file": "./src/transformers/models/auto/configuration_auto.py", "line": 1193, "col": 21, "module": "re", "call": "search", "pattern": "^(\\s*)List options\\s*$", "test_string": "alpha alpha"}
{"file": "./src/transformers/models/codegen/tokenization_codegen.py", "line": 177, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/blenderbot_small/tokenization_blenderbot_small.py", "line": 113, "col": 16, "module": "re", "call": "sub", "pattern": "\\s{2,}", "test_string": "Example likes xx."}
{"file": "./src/transformers/models/blenderbot_small/tokenization_blenderbot_small.py", "line": 172, "col": 16, "module": "re", "call": "findall", "pattern": "\\S+\\n?", "test_string": "Example likes x."}
{"file": "./src/transformers/models/rembert/convert_rembert_tf_checkpoint_to_pytorch.py", "line": 77, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/rembert/convert_rembert_tf_checkpoint_to_pytorch.py", "line": 78, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/myt5/convert_myt5_original_tf_checkpoint_to_pytorch.py", "line": 74, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/myt5/convert_myt5_original_tf_checkpoint_to_pytorch.py", "line": 75, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/flaubert/tokenization_flaubert.py", "line": 71, "col": 11, "module": "re", "call": "sub", "pattern": "。\\s*", "test_string": "Example likes 。x."}
{"file": "./src/transformers/models/flaubert/tokenization_flaubert.py", "line": 96, "col": 11, "module": "re", "call": "sub", "pattern": "．\\s*", "test_string": "Example likes ．x."}
{"file": "./src/transformers/models/big_bird/tokenization_big_bird.py", "line": 218, "col": 19, "module": "re", "call": "sub", "pattern": " (\\[(MASK|SEP)\\])", "test_string": "Example likes [alpha]."}
{"file": "./src/transformers/models/big_bird/convert_bigbird_original_tf_checkpoint_to_pytorch.py", "line": 136, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/big_bird/convert_bigbird_original_tf_checkpoint_to_pytorch.py", "line": 137, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/led/tokenization_led.py", "line": 199, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/pix2struct/convert_pix2struct_original_pytorch_to_hf.py", "line": 85, "col": 26, "module": "re", "call": "sub", "pattern": "layers_(\\d+)", "test_string": "Example likes alpha x."}
{"file": "./src/transformers/models/pix2struct/convert_pix2struct_original_pytorch_to_hf.py", "line": 90, "col": 26, "module": "re", "call": "sub", "pattern": "layers_(\\d+)", "test_string": "Example likes alpha x."}
{"file": "./src/transformers/models/canine/convert_canine_original_tf_checkpoint_to_pytorch.py", "line": 93, "col": 16, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/canine/convert_canine_original_tf_checkpoint_to_pytorch.py", "line": 94, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 57, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.functional(?:_(\\d+))?\\.layers", "test_string": "Example likes alpha.alpha x.alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 69, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.sequential\\.layers\\.conv1d\\.", "test_string": "Example likes alpha.alpha.alpha.alpha1d.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 70, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.sequential\\.layers\\.conv1d_1\\.", "test_string": "Example likes alpha.alpha.alpha.alpha1d 1.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 71, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.sequential\\.layers\\.conv1d_2\\.", "test_string": "Example likes alpha.alpha.alpha.alpha1d 2.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 72, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.sequential\\.layers\\.group_normalization\\.", "test_string": "Example likes alpha.alpha.alpha.alpha alpha.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 73, "col": 11, "module": "re", "call": "sub", "pattern": "mha_with_rope\\.key_dense", "test_string": "Example likes alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 74, "col": 11, "module": "re", "call": "sub", "pattern": "mha_with_rope\\.query_dense", "test_string": "Example likes alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 75, "col": 11, "module": "re", "call": "sub", "pattern": "mha_with_rope\\.value_dense", "test_string": "Example likes alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 76, "col": 11, "module": "re", "call": "sub", "pattern": "mha_with_rope\\.output_dense", "test_string": "Example likes alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 77, "col": 11, "module": "re", "call": "sub", "pattern": "mha_precomputed_kv\\.key_dense", "test_string": "Example likes alpha alpha kv.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 78, "col": 11, "module": "re", "call": "sub", "pattern": "mha_precomputed_kv\\.query_dense", "test_string": "Example likes alpha alpha kv.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 79, "col": 11, "module": "re", "call": "sub", "pattern": "mha_precomputed_kv\\.value_dense", "test_string": "Example likes alpha alpha kv.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 80, "col": 11, "module": "re", "call": "sub", "pattern": "mha_precomputed_kv\\.output_dense", "test_string": "Example likes alpha alpha kv.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 81, "col": 11, "module": "re", "call": "sub", "pattern": "mha_causal_with_rope\\.key_dense", "test_string": "Example likes alpha alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 82, "col": 11, "module": "re", "call": "sub", "pattern": "mha_causal_with_rope\\.query_dense", "test_string": "Example likes alpha alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 83, "col": 11, "module": "re", "call": "sub", "pattern": "mha_causal_with_rope\\.value_dense", "test_string": "Example likes alpha alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 84, "col": 11, "module": "re", "call": "sub", "pattern": "mha_causal_with_rope\\.output_dense", "test_string": "Example likes alpha alpha alpha alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 85, "col": 11, "module": "re", "call": "sub", "pattern": "layer_normalization\\.", "test_string": "Example likes alpha alpha.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 86, "col": 11, "module": "re", "call": "sub", "pattern": "layer_normalization_1\\.", "test_string": "Example likes alpha alpha 1.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 87, "col": 11, "module": "re", "call": "sub", "pattern": "layer_normalization_2\\.", "test_string": "Example likes alpha alpha 2.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 88, "col": 11, "module": "re", "call": "sub", "pattern": "vars\\.0", "test_string": "Example likes alpha.0."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 89, "col": 11, "module": "re", "call": "sub", "pattern": "vars\\.1", "test_string": "Example likes alpha.1."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 90, "col": 11, "module": "re", "call": "sub", "pattern": "layers\\.reversible_embedding", "test_string": "Example likes alpha.alpha alpha."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 64, "col": 15, "module": "re", "call": "sub", "pattern": "functional\\.layers\\.dense\\.", "test_string": "Example likes alpha.alpha.alpha.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 65, "col": 15, "module": "re", "call": "sub", "pattern": "functional\\.layers\\.dense_1\\.", "test_string": "Example likes alpha.alpha.alpha 1.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 67, "col": 15, "module": "re", "call": "sub", "pattern": "functional\\.layers\\.sequential\\.layers\\.dense\\.", "test_string": "Example likes alpha.alpha.alpha.alpha.alpha.."}
{"file": "./src/transformers/models/moonshine/convert_usefulsensors_to_hf.py", "line": 68, "col": 15, "module": "re", "call": "sub", "pattern": "functional\\.layers\\.sequential\\.layers\\.dense_1\\.", "test_string": "Example likes alpha.alpha.alpha.alpha.alpha 1.."}
{"file": "./src/transformers/models/openai/tokenization_openai.py", "line": 229, "col": 11, "module": "re", "call": "sub", "pattern": "(-+|~+|!+|\"+|;+|\\?+|\\++|,+|\\)+|\\(+|\\\\+|\\/+|\\*+|\\[+|\\]+|}+|{+|\\|+|_+)", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/openai/tokenization_openai.py", "line": 230, "col": 11, "module": "re", "call": "sub", "pattern": "\\s*\\n\\s*", "test_string": "Example likes x\nx."}
{"file": "./src/transformers/models/openai/tokenization_openai.py", "line": 231, "col": 11, "module": "re", "call": "sub", "pattern": "[^\\S\\n]+", "test_string": "Example likes ."}
{"file": "./src/transformers/models/openai/convert_openai_original_tf_checkpoint_to_pytorch.py", "line": 84, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+\\d+", "test_string": "Example likes Mx."}
{"file": "./src/transformers/models/openai/convert_openai_original_tf_checkpoint_to_pytorch.py", "line": 85, "col": 30, "module": "re", "call": "split", "pattern": "(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/zamba2/modular_zamba2.py", "line": 990, "col": 46, "module": "re", "call": "compile", "pattern": "^shared_transformer\\.feed_forward\\.gate_up_proj_adapter_list\\.\"\n                                + str(adapter_id)\n                                + r\"\\.(?:0|1)\\.weight$", "test_string": "alpha alpha.alpha alpha.alpha up alpha alpha alpha.\" alpha id r\".0.alpha"}
{"file": "./src/transformers/models/zamba2/modular_zamba2.py", "line": 1001, "col": 55, "module": "re", "call": "compile", "pattern": "^shared_transformer\\.self_attn\\.\"\n                                    + r\"(?:linear_q_adapter_list|linear_k_adapter_list|linear_v_adapter_list)\\.\"\n                                    + str(adapter_id)\n                                    + r\"\\.(?:0|1)\\.weight$", "test_string": "alpha alpha.alpha alpha.\" r\"alpha q alpha alpha.\" alpha id r\".0.alpha"}
{"file": "./src/transformers/models/zamba2/modeling_zamba2.py", "line": 1430, "col": 46, "module": "re", "call": "compile", "pattern": "^shared_transformer\\.feed_forward\\.gate_up_proj_adapter_list\\.\"\n                                + str(adapter_id)\n                                + r\"\\.(?:0|1)\\.weight$", "test_string": "alpha alpha.alpha alpha.alpha up alpha alpha alpha.\" alpha id r\".0.alpha"}
{"file": "./src/transformers/models/zamba2/modeling_zamba2.py", "line": 1441, "col": 55, "module": "re", "call": "compile", "pattern": "^shared_transformer\\.self_attn\\.\"\n                                    + r\"(?:linear_q_adapter_list|linear_k_adapter_list|linear_v_adapter_list)\\.\"\n                                    + str(adapter_id)\n                                    + r\"\\.(?:0|1)\\.weight$", "test_string": "alpha alpha.alpha alpha.\" r\"alpha q alpha alpha.\" alpha id r\".0.alpha"}
{"file": "./src/transformers/models/deberta/tokenization_deberta.py", "line": 181, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/funnel/convert_funnel_original_tf_checkpoint_to_pytorch.py", "line": 88, "col": 66, "module": "re", "call": "fullmatch", "pattern": "layer_\\d+", "test_string": "Example likes alpha x."}
{"file": "./src/transformers/models/funnel/convert_funnel_original_tf_checkpoint_to_pytorch.py", "line": 89, "col": 34, "module": "re", "call": "search", "pattern": "layer_(\\d+)", "test_string": "Example likes alpha x."}
{"file": "./src/transformers/models/longformer/tokenization_longformer.py", "line": 201, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/xlm/tokenization_xlm.py", "line": 71, "col": 11, "module": "re", "call": "sub", "pattern": "。\\s*", "test_string": "Example likes 。x."}
{"file": "./src/transformers/models/xlm/tokenization_xlm.py", "line": 96, "col": 11, "module": "re", "call": "sub", "pattern": "．\\s*", "test_string": "Example likes ．x."}
{"file": "./src/transformers/models/roformer/convert_roformer_original_tf_checkpoint_to_pytorch.py", "line": 67, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/roformer/convert_roformer_original_tf_checkpoint_to_pytorch.py", "line": 68, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/megatron_gpt2/convert_megatron_gpt2_checkpoint.py", "line": 151, "col": 15, "module": "re", "call": "compile", "pattern": "layers\\.(\\d+)\\.([a-z0-9_.]+)\\.([a-z0-9_]+)", "test_string": "Example likes alpha.x.m.m."}
{"file": "./src/transformers/models/megatron_gpt2/checkpoint_reshaping_and_interoperability.py", "line": 406, "col": 15, "module": "re", "call": "compile", "pattern": "layers\\.(\\d+)\\.([a-z0-9_.]+)\\.([a-z]+)", "test_string": "Example likes alpha.x.m.m."}
{"file": "./src/transformers/models/megatron_gpt2/checkpoint_reshaping_and_interoperability.py", "line": 781, "col": 15, "module": "re", "call": "compile", "pattern": "transformer.h\\.(\\d+)\\.([a-z0-9_.]+)\\.([a-z]+)", "test_string": "Example likes alpha.x.m.m."}
{"file": "./src/transformers/models/whisper/tokenization_whisper.py", "line": 311, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/whisper/tokenization_whisper.py", "line": 312, "col": 29, "module": "re", "call": "compile", "pattern": "<\\|(\\d+\\.\\d+)\\|>", "test_string": "Example likes <|x.x|>."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 84, "col": 12, "module": "re", "call": "sub", "pattern": "[<\\[][^>\\]]*[>\\]]", "test_string": "Example likes <>>."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 85, "col": 12, "module": "re", "call": "sub", "pattern": "\\(([^)]+?)\\)", "test_string": "Example likes (a)."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 91, "col": 12, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 440, "col": 19, "module": "re", "call": "split", "pattern": "\\band\\s+a\\s+half\\b", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 457, "col": 12, "module": "re", "call": "sub", "pattern": "([a-z])([0-9])", "test_string": "Example likes m4."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 458, "col": 12, "module": "re", "call": "sub", "pattern": "([0-9])([a-z])", "test_string": "Example likes 4m."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 461, "col": 12, "module": "re", "call": "sub", "pattern": "([0-9])\\s+(st|nd|rd|th|s)\\b", "test_string": "Example likes 4alpha."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 482, "col": 12, "module": "re", "call": "sub", "pattern": "([€£$])([0-9]+) (?:and )?¢([0-9]{1,2})\\b", "test_string": "Example likes €4 alpha ¢4."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 483, "col": 12, "module": "re", "call": "sub", "pattern": "[€£$]0.([0-9]{1,2})\\b", "test_string": "Example likes €0A4."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 486, "col": 12, "module": "re", "call": "sub", "pattern": "\\b1(s?)\\b", "test_string": "Example likes 1s."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 576, "col": 12, "module": "re", "call": "sub", "pattern": "[<\\[][^>\\]]*[>\\]]", "test_string": "Example likes <>>."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 577, "col": 12, "module": "re", "call": "sub", "pattern": "\\(([^)]+?)\\)", "test_string": "Example likes (a)."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 579, "col": 12, "module": "re", "call": "sub", "pattern": "\\s+'", "test_string": "Example likes x'."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 584, "col": 12, "module": "re", "call": "sub", "pattern": "(\\d),(\\d)", "test_string": "Example likes x,x."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 585, "col": 12, "module": "re", "call": "sub", "pattern": "\\.([^0-9]|$)", "test_string": "Example likes .4."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 592, "col": 12, "module": "re", "call": "sub", "pattern": "[.$¢€£]([^0-9])", "test_string": "Example likes .4."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 593, "col": 12, "module": "re", "call": "sub", "pattern": "([^0-9])%", "test_string": "Example likes 4%."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 595, "col": 12, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 246, "col": 15, "module": "re", "call": "match", "pattern": "^\\d+(\\.\\d+)?$", "test_string": "x.x"}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 89, "col": 25, "module": "re", "call": "findall", "pattern": "\\X", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/whisper/english_normalizer.py", "line": 243, "col": 51, "module": "re", "call": "match", "pattern": "^\\d+(\\.\\d+)?$", "test_string": "x.x"}
{"file": "./src/transformers/models/whisper/tokenization_whisper_fast.py", "line": 137, "col": 29, "module": "re", "call": "compile", "pattern": "<\\|(\\d+\\.\\d+)\\|>", "test_string": "Example likes <|x.x|>."}
{"file": "./src/transformers/models/gpt2/convert_gpt2_original_tf_checkpoint_to_pytorch.py", "line": 59, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+\\d+", "test_string": "Example likes Mx."}
{"file": "./src/transformers/models/gpt2/convert_gpt2_original_tf_checkpoint_to_pytorch.py", "line": 60, "col": 30, "module": "re", "call": "split", "pattern": "(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/gpt2/tokenization_gpt2.py", "line": 167, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/clip/tokenization_clip.py", "line": 77, "col": 11, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/clip/tokenization_clip.py", "line": 318, "col": 19, "module": "re", "call": "compile", "pattern": "<\\|startoftext\\|>|<\\|endoftext\\|>|'s|'t|'re|'ve|'m|'ll|'d|[\\p{L}]+|[\\p{N}]|[^\\s\\p{L}\\p{N}]+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/udop/tokenization_udop.py", "line": 340, "col": 38, "module": "re", "call": "search", "pattern": "<extra_id_\\d+>", "test_string": "Example likes <alpha id x>."}
{"file": "./src/transformers/models/byt5/convert_byt5_original_tf_checkpoint_to_pytorch.py", "line": 74, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/byt5/convert_byt5_original_tf_checkpoint_to_pytorch.py", "line": 75, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/bart/tokenization_bart.py", "line": 194, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/vits/tokenization_vits.py", "line": 39, "col": 24, "module": "re", "call": "compile", "pattern": "[^\\x00-\\x7F]", "test_string": "Example likes ?."}
{"file": "./src/transformers/models/vits/tokenization_vits.py", "line": 200, "col": 28, "module": "re", "call": "sub", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/idefics3/processing_idefics3.py", "line": 145, "col": 53, "module": "re", "call": "compile", "pattern": "(\\n?<global-img>\\n?|<row_\\d+_col_\\d+>\\n?)+", "test_string": "Example likes <alpha alpha>."}
{"file": "./src/transformers/models/clvp/tokenization_clvp.py", "line": 177, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 209, "col": 15, "module": "re", "call": "sub", "pattern": "([0-9][0-9,]+[0-9])", "test_string": "Example likes 444."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 210, "col": 15, "module": "re", "call": "sub", "pattern": "£([0-9,]*[0-9])", "test_string": "Example likes £44."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 211, "col": 15, "module": "re", "call": "sub", "pattern": "\\$([0-9.,]*[0-9])", "test_string": "Example likes $44."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 212, "col": 15, "module": "re", "call": "sub", "pattern": "([0-9]++\\.[0-9]+)", "test_string": "Example likes a.4."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 213, "col": 15, "module": "re", "call": "sub", "pattern": "[0-9]++(st|nd|rd|th)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 214, "col": 15, "module": "re", "call": "sub", "pattern": "[0-9]+", "test_string": "Example likes 4."}
{"file": "./src/transformers/models/clvp/number_normalizer.py", "line": 229, "col": 22, "module": "re", "call": "compile", "pattern": "\\s+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/mobilebert/convert_mobilebert_original_tf_checkpoint_to_pytorch.py", "line": 69, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+_\\d+", "test_string": "Example likes M x."}
{"file": "./src/transformers/models/mobilebert/convert_mobilebert_original_tf_checkpoint_to_pytorch.py", "line": 70, "col": 30, "module": "re", "call": "split", "pattern": "_(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/florence2/processing_florence2.py", "line": 681, "col": 32, "module": "re", "call": "sub", "pattern": "^<loc_\\d+>", "test_string": "Example likes <alpha x>."}
{"file": "./src/transformers/models/florence2/processing_florence2.py", "line": 702, "col": 58, "module": "re", "call": "finditer", "pattern": "<loc_(\\d+)>", "test_string": "Example likes <alpha x>."}
{"file": "./src/transformers/models/florence2/modular_florence2.py", "line": 874, "col": 32, "module": "re", "call": "sub", "pattern": "^<loc_\\d+>", "test_string": "Example likes <alpha x>."}
{"file": "./src/transformers/models/florence2/modular_florence2.py", "line": 895, "col": 58, "module": "re", "call": "finditer", "pattern": "<loc_(\\d+)>", "test_string": "Example likes <alpha x>."}
{"file": "./src/transformers/models/herbert/tokenization_herbert.py", "line": 53, "col": 11, "module": "re", "call": "sub", "pattern": "。\\s*", "test_string": "Example likes 。x."}
{"file": "./src/transformers/models/herbert/tokenization_herbert.py", "line": 78, "col": 11, "module": "re", "call": "sub", "pattern": "．\\s*", "test_string": "Example likes ．x."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 58, "col": 14, "module": "re", "call": "sub", "pattern": "blocks", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 60, "col": 14, "module": "re", "call": "sub", "pattern": "attn", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 62, "col": 14, "module": "re", "call": "sub", "pattern": "norm1", "test_string": "Example likes alpha1."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 64, "col": 14, "module": "re", "call": "sub", "pattern": "norm2", "test_string": "Example likes alpha2."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 66, "col": 14, "module": "re", "call": "sub", "pattern": "encoder.norm", "test_string": "Example likes alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 68, "col": 14, "module": "re", "call": "sub", "pattern": "encoder.patch_embed.proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 71, "col": 14, "module": "re", "call": "sub", "pattern": "encoder.pos_embed", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 73, "col": 14, "module": "re", "call": "sub", "pattern": "encoder.cls_token", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/blip/convert_blip_original_pytorch_to_hf.py", "line": 76, "col": 14, "module": "re", "call": "sub", "pattern": "self_attn.proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/biogpt/convert_biogpt_original_pytorch_checkpoint_to_pytorch.py", "line": 150, "col": 15, "module": "re", "call": "sub", "pattern": "@@$", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/biogpt/convert_biogpt_original_pytorch_checkpoint_to_pytorch.py", "line": 150, "col": 67, "module": "re", "call": "sub", "pattern": "$", "test_string": "Example likes ."}
{"file": "./src/transformers/models/phobert/tokenization_phobert.py", "line": 279, "col": 16, "module": "re", "call": "findall", "pattern": "\\S+\\n?", "test_string": "Example likes x."}
{"file": "./src/transformers/models/gpt_oss/convert_gpt_oss_weights_to_hf.py", "line": 202, "col": 20, "module": "re", "call": "sub", "pattern": "qkv_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/gpt_oss/convert_gpt_oss_weights_to_hf.py", "line": 203, "col": 20, "module": "re", "call": "sub", "pattern": "qkv_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/gpt_oss/convert_gpt_oss_weights_to_hf.py", "line": 204, "col": 20, "module": "re", "call": "sub", "pattern": "qkv_proj", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/models/imagegpt/convert_imagegpt_original_tf2_to_pytorch.py", "line": 78, "col": 15, "module": "re", "call": "fullmatch", "pattern": "[A-Za-z]+\\d+", "test_string": "Example likes Mx."}
{"file": "./src/transformers/models/imagegpt/convert_imagegpt_original_tf2_to_pytorch.py", "line": 79, "col": 30, "module": "re", "call": "split", "pattern": "(\\d+)", "test_string": "Example likes x."}
{"file": "./src/transformers/models/luke/tokenization_luke.py", "line": 322, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/donut/processing_donut.py", "line": 112, "col": 30, "module": "re", "call": "search", "pattern": "<s_", "test_string": "Example likes <s."}
{"file": "./src/transformers/models/depth_pro/convert_depth_pro_weights_to_hf.py", "line": 122, "col": 18, "module": "re", "call": "search", "pattern": "(\\(.*?\\))", "test_string": "Example likes (A)."}
{"file": "./src/transformers/models/dia/convert_dia_to_hf.py", "line": 127, "col": 13, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./src/transformers/models/layoutlmv3/tokenization_layoutlmv3.py", "line": 301, "col": 19, "module": "re", "call": "compile", "pattern": "'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+", "test_string": "a simple example phrase"}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 225, "col": 33, "module": "re", "call": "compile", "pattern": "(https?|ftp)(:\\/\\/[-_\\.!~*\\'()a-zA-Z0-9;\\/?:\\@&=\\+$,%#]+)", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 226, "col": 33, "module": "re", "call": "compile", "pattern": "[A-Za-z0-9\\._+]*@[\\-_0-9A-Za-z]+(\\.[A-Za-z]+)*", "test_string": "alice@example.com"}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 227, "col": 33, "module": "re", "call": "compile", "pattern": "[\\(]{0,1}[0-9]{2,4}[\\)\\-\\(]{0,1}[0-9]{2,4}[\\)\\-]{0,1}[0-9]{3,4}", "test_string": "Example-likes-(44-44-444."}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 228, "col": 33, "module": "re", "call": "compile", "pattern": "([12]\\d{3}[/\\-年])*(0?[1-9]|1[0-2])[/\\-月]((0?[1-9]|[12][0-9]|3[01])日?)*(\\d{1,2}|:|\\d{1,2}時|\\d{1,2}分|\\(日\\)|\\(月\\)|\\(火\\)|\\(水\\)|\\(木\\)|\\(金\\)|\\(土\\)|㈰|㈪|㈫|㈬|㈭|㈮|㈯)*", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 231, "col": 33, "module": "re", "call": "compile", "pattern": "(明治|大正|昭和|平成|令和|㍾|㍽|㍼|㍻|\\u32ff)\\d{1,2}年(0?[1-9]|1[0-2])月(0?[1-9]|[12][0-9]|3[01])日(\\d{1,2}|:|\\d{1,2}時|\\d{1,2}分|\\(日\\)|\\(月\\)|\\(火\\)|\\(水\\)|\\(木\\)|\\(金\\)|\\(土\\)|㈰|㈪|㈫|㈬|㈭|㈮|㈯)*", "test_string": "Example likes 明治x年05月05日x時."}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 238, "col": 37, "module": "re", "call": "compile", "pattern": "(?:\\d,\\d{3}|[\\d億])*+\"\n                r\"(?:\\d,\\d{3}|[\\d万])*+\"\n                r\"(?:\\d,\\d{3}|[\\d千])*+\"\n                r\"(?:千円|万円|千万円|円|千ドル|万ドル|千万ドル|ドル|千ユーロ|万ユーロ|千万ユーロ|ユーロ)+\"\n                r\"(?:\\(税込\\)|\\(税抜\\)|\\+tax)*", "test_string": "Example likes a\" r\"a\" r\"a\" r\"千万ユーロ\" r\"+alpha."}
{"file": "./src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py", "line": 246, "col": 37, "module": "re", "call": "compile", "pattern": "(?:\\d,\\d{3}|[\\d億万千])*\"\n                r\"(?:千円|万円|千万円|円|千ドル|万ドル|千万ドル|ドル|千ユーロ|万ユーロ|千万ユーロ|ユーロ)+\"\n                r\"(?:\\(税込\\)|\\(税抜\\)|\\+tax)*", "test_string": "Example likes x,alpha\" r\"千万ユーロ\" r\"+alpha."}
{"file": "./src/transformers/models/bamba/convert_mamba_ssm_checkpoint.py", "line": 50, "col": 12, "module": "re", "call": "sub", "pattern": "(\\d+)\\.norm\\.", "test_string": "Example likes x.alpha.."}
{"file": "./src/transformers/models/bamba/convert_mamba_ssm_checkpoint.py", "line": 51, "col": 12, "module": "re", "call": "sub", "pattern": "(\\d+)\\.norm2\\.", "test_string": "Example likes x.alpha2.."}
{"file": "./src/transformers/quantizers/quantizer_torchao.py", "line": 59, "col": 16, "module": "re", "call": "search", "pattern": "(\\d)weight", "test_string": "Example likes alpha."}
{"file": "./src/transformers/integrations/hub_kernels.py", "line": 167, "col": 12, "module": "re", "call": "search", "pattern": "^[^/:]+/[^/:]+(?:@[^/:]+)?(?::[^/:]+)?$", "test_string": "alice@example.com"}
{"file": "./src/transformers/integrations/fbgemm_fp8.py", "line": 210, "col": 28, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./src/transformers/integrations/tensor_parallel.py", "line": 133, "col": 25, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./src/transformers/integrations/tensor_parallel.py", "line": 1069, "col": 20, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./src/transformers/integrations/tensor_parallel.py", "line": 1075, "col": 29, "module": "re", "call": "sub", "pattern": "\\d+", "test_string": "Example likes x."}
{"file": "./src/transformers/integrations/integration_utils.py", "line": 1499, "col": 33, "module": "re", "call": "sub", "pattern": "[^0-9A-Za-z_\\-\\.\\ :/]", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/commands/chat.py", "line": 142, "col": 26, "module": "re", "call": "sub", "pattern": "<(/*)(\\w*)>", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/commands/add_new_model_like.py", "line": 179, "col": 11, "module": "re", "call": "search", "pattern": "(?:tokenization)|(?:image_processing)_auto_fast.py", "test_string": "Example likes alpha alpha alpha alpha."}
{"file": "./src/transformers/commands/add_new_model_like.py", "line": 231, "col": 29, "module": "re", "call": "sub", "pattern": "# ?", "test_string": "Example likes #."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 256, "col": 34, "module": "re", "call": "search", "pattern": "    image_processing_class = .*", "test_string": "Example likes alpha alpha alpha = A."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 280, "col": 21, "module": "re", "call": "search", "pattern": "^# coding=utf-8\\n(#[^\\n]*\\n)*", "test_string": "Example likes # alpha=alpha 8\n#a."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 302, "col": 21, "module": "re", "call": "sub", "pattern": "# Copyright (\\d+)\\s", "test_string": "Example likes # alpha xx."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 304, "col": 12, "module": "re", "call": "search", "pattern": "^\"\"\"Image processor.*$", "test_string": "\"\"\"alpha alpha"}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 365, "col": 12, "module": "re", "call": "search", "pattern": "def __init__.*?def ", "test_string": "Example likes alpha alpha alpha."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 379, "col": 19, "module": "re", "call": "findall", "pattern": "= (.*?)(?:,|\\))", "test_string": "Example likes = A,."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 470, "col": 27, "module": "re", "call": "findall", "pattern": "class (\\w*ImageProcessor)", "test_string": "Example likes alpha alpha."}
{"file": "./src/transformers/commands/add_fast_image_processor.py", "line": 48, "col": 22, "module": "re", "call": "compile", "pattern": "if TYPE_CHECKING:\\n(?P<if_block>.*?)(?=\\s*else:)", "test_string": "Example likes if alpha alpha:\nalpha:."}
{"file": "./src/transformers/commands/serving.py", "line": 1097, "col": 44, "module": "re", "call": "search", "pattern": "\\\"name\\\": \\\"(.*?)\\\"", "test_string": "Example likes \"alpha\": \"A\"."}
{"file": "./src/transformers/pipelines/document_question_answering.py", "line": 498, "col": 17, "module": "re", "call": "search", "pattern": "<s_answer>(.*)</s_answer>", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/pipelines/document_question_answering.py", "line": 493, "col": 19, "module": "re", "call": "sub", "pattern": "<.*?>", "test_string": "Example likes <A>."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 59, "col": 17, "module": "re", "call": "compile", "pattern": "^(.*?)[\\n\\s]*(Args:|Returns:|Raises:|\\Z)", "test_string": "Example likes A\nalpha:."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 61, "col": 10, "module": "re", "call": "compile", "pattern": "\\n\\s*Args:\\n\\s*(.*?)[\\n\\s]*(Returns:|Raises:|\\Z)", "test_string": "Example likes alpha:\nxA\nalpha:."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 63, "col": 16, "module": "re", "call": "compile", "pattern": "\n(?:^|\\n)  # Match the start of the args block, or a newline\n\\s*(\\w+):\\s*  # Capture the argument name and strip spacing\n(.*?)\\s*  # Capture the argument description, which can span multiple lines, and strip trailing spacing\n(?=\\n\\s*\\w+:|\\Z)  # Stop when you hit the next argument or the end of the block\n", "test_string": "Example likes # alpha alpha alpha of alpha alpha alpha, or a alpha\nxx:x # alpha alpha alpha alpha alpha alpha alpha\nAx # alpha alpha alpha alpha, alpha alpha alpha alpha alpha, alpha alpha alpha alpha xx: # alpha alpha alpha alpha alpha alpha alpha or alpha alpha of alpha alpha."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 73, "col": 13, "module": "re", "call": "compile", "pattern": "\\n\\s*Returns:\\n\\s*(.*?)[\\n\\s]*(Raises:|\\Z)", "test_string": "Example likes alpha:\nxA\nalpha:."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 362, "col": 23, "module": "re", "call": "search", "pattern": "\\(choices:\\s*(.*?)\\)\\s*$", "test_string": "Example likes (alpha:xA)x."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 230, "col": 31, "module": "re", "call": "sub", "pattern": "\\s*\\n+\\s*", "test_string": "Example likes x\nx."}
{"file": "./src/transformers/utils/chat_template_utils.py", "line": 476, "col": 44, "module": "re", "call": "search", "pattern": "\\{\\%-?\\s*generation\\s*-?\\%\\}", "test_string": "Example likes {% alpha %}."}
{"file": "./src/transformers/utils/notebook.py", "line": 357, "col": 40, "module": "re", "call": "sub", "pattern": "\\_loss$", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/versions.py", "line": 69, "col": 7, "module": "re", "call": "match", "pattern": "^[\\w_\\-\\d]+$", "test_string": ""}
{"file": "./src/transformers/utils/versions.py", "line": 72, "col": 16, "module": "re", "call": "findall", "pattern": "^([^!=<>\\s]+)([\\s!=<>]{1,2}.+)", "test_string": "Example likes !!A."}
{"file": "./src/transformers/utils/versions.py", "line": 82, "col": 20, "module": "re", "call": "findall", "pattern": "^([\\s!=<>]{1,2})(.+)", "test_string": "Example likes !A."}
{"file": "./src/transformers/utils/hub.py", "line": 252, "col": 13, "module": "re", "call": "search", "pattern": "snapshots/([^/]+)/", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 71, "col": 17, "module": "re", "call": "compile", "pattern": "\\[(.+?)\\]\\((https://huggingface\\.co/.+?)\\)", "test_string": "http://example.com/docs"}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 994, "col": 20, "module": "re", "call": "compile", "pattern": "(of shape\\s*(?:`.*?`|\\(.*?\\)))", "test_string": "Example likes of alpha`A`."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1002, "col": 22, "module": "re", "call": "compile", "pattern": "(defaults to \\s*[^)]*)", "test_string": "Example likes alpha to xa."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1023, "col": 12, "module": "re", "call": "search", "pattern": "(?m)^([ \\t]*)(?=Example|Return)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1029, "col": 19, "module": "re", "call": "compile", "pattern": "(?:Args:)(\\n.*)?(\\n)?$", "test_string": "Example likes alpha:\nA."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1159, "col": 23, "module": "re", "call": "findall", "pattern": "{(.*?)}", "test_string": "Example likes {A}."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1601, "col": 20, "module": "re", "call": "search", "pattern": "(?m)^([ \\t]*)(?=Example)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1065, "col": 32, "module": "re", "call": "sub", "pattern": "^", "test_string": "Example likes ."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1297, "col": 25, "module": "re", "call": "sub", "pattern": "ForwardRef\\('([\\w.]+)'\\)", "test_string": "Example likes alpha('.')."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1299, "col": 25, "module": "re", "call": "sub", "pattern": "Optional\\[(.*?)\\]", "test_string": "Example likes alpha[A]."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1642, "col": 52, "module": "re", "call": "search", "pattern": "(?m)^([ \\t]*)(?=Example)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1599, "col": 28, "module": "re", "call": "search", "pattern": "(?m)^([ \\t]*)(?=Return)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1499, "col": 33, "module": "re", "call": "sub", "pattern": "ForwardRef\\('([\\w.]+)'\\)", "test_string": "Example likes alpha('.')."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1501, "col": 33, "module": "re", "call": "sub", "pattern": "Optional\\[(.*?)\\]", "test_string": "Example likes alpha[A]."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1842, "col": 33, "module": "re", "call": "sub", "pattern": "ForwardRef\\('([\\w.]+)'\\)", "test_string": "Example likes alpha('.')."}
{"file": "./src/transformers/utils/auto_docstring.py", "line": 1844, "col": 33, "module": "re", "call": "sub", "pattern": "Optional\\[(.*?)\\]", "test_string": "Example likes alpha[A]."}
{"file": "./src/transformers/utils/doc.py", "line": 100, "col": 13, "module": "re", "call": "search", "pattern": "^(\\s*)\\S", "test_string": "Example likes xx."}
{"file": "./src/transformers/utils/doc.py", "line": 124, "col": 20, "module": "re", "call": "sub", "pattern": "^(\\s+)(\\S+)(\\s+)", "test_string": "Example likes alpha."}
{"file": "./src/transformers/utils/doc.py", "line": 125, "col": 20, "module": "re", "call": "sub", "pattern": ":\\s*\\n\\s*(\\S)", "test_string": "Example likes :x\nxx."}
{"file": "./src/transformers/utils/doc.py", "line": 1085, "col": 15, "module": "re", "call": "match", "pattern": "^refs/pr/\\\\d+", "test_string": "/home/user/readme.txt"}
{"file": "./src/transformers/utils/doc.py", "line": 140, "col": 33, "module": "re", "call": "search", "pattern": "^\\s*(Args|Parameters):\\s*$", "test_string": "alpha:x"}
{"file": "./src/transformers/utils/doc.py", "line": 1105, "col": 33, "module": "re", "call": "search", "pattern": "^\\s*Returns?:\\s*$", "test_string": "alpha:x"}
{"file": "./src/transformers/data/metrics/squad_metrics.py", "line": 40, "col": 16, "module": "re", "call": "compile", "pattern": "\\b(a|an|the)\\b", "test_string": "Example likes alpha."}
{"file": "./tests/test_modeling_common.py", "line": 905, "col": 27, "module": "re", "call": "search", "pattern": "^# Copyright (\\d{4})", "test_string": "Example likes # alpha alpha."}
{"file": "./tests/test_modeling_common.py", "line": 953, "col": 19, "module": "re", "call": "search", "pattern": "\\.parametrizations\\..*?\\.original[01]", "test_string": "Example likes .alpha.A.alpha0."}
{"file": "./tests/test_tokenization_common.py", "line": 270, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/test_pipeline_mixin.py", "line": 918, "col": 17, "module": "re", "call": "match", "pattern": "(\\w+)\\W", "test_string": "Example likes xx."}
{"file": "./tests/models/janus/test_modeling_janus.py", "line": 237, "col": 23, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/janus/test_modeling_janus.py", "line": 242, "col": 23, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/whisper/test_modeling_whisper.py", "line": 2533, "col": 31, "module": "re", "call": "split", "pattern": "<\\|[\\d\\.]+\\|>", "test_string": "Example likes <|.|>."}
{"file": "./tests/models/whisper/test_modeling_whisper.py", "line": 2537, "col": 28, "module": "re", "call": "findall", "pattern": "<\\|[\\d\\.]+\\|>", "test_string": "Example likes <|.|>."}
{"file": "./tests/models/deepseek_vl_hybrid/test_modeling_deepseek_vl_hybrid.py", "line": 258, "col": 24, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/deepseek_vl_hybrid/test_modeling_deepseek_vl_hybrid.py", "line": 267, "col": 24, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/byt5/test_tokenization_byt5.py", "line": 62, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/models/markuplm/test_tokenization_markuplm.py", "line": 1553, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/models/layoutlmv2/test_tokenization_layoutlmv2.py", "line": 1768, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/models/deepseek_vl/test_modeling_deepseek_vl.py", "line": 222, "col": 23, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/deepseek_vl/test_modeling_deepseek_vl.py", "line": 227, "col": 23, "module": "re", "call": "finditer", "pattern": "Attention(?!Pool)", "test_string": "Example likes alpha."}
{"file": "./tests/models/perceiver/test_tokenization_perceiver.py", "line": 63, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/models/t5/test_tokenization_t5.py", "line": 374, "col": 25, "module": "re", "call": "search", "pattern": "<extra_id_\\d+>", "test_string": "Example likes <alpha id x>."}
{"file": "./tests/models/t5/test_tokenization_t5.py", "line": 385, "col": 25, "module": "re", "call": "search", "pattern": "<extra_id_\\d+>", "test_string": "Example likes <alpha id x>."}
{"file": "./tests/models/vision_encoder_decoder/test_modeling_vision_encoder_decoder.py", "line": 1302, "col": 19, "module": "re", "call": "sub", "pattern": "<.*?>", "test_string": "Example likes <A>."}
{"file": "./tests/models/vision_encoder_decoder/test_modeling_vision_encoder_decoder.py", "line": 1365, "col": 19, "module": "re", "call": "sub", "pattern": "<.*?>", "test_string": "Example likes <A>."}
{"file": "./tests/models/vision_encoder_decoder/test_modeling_vision_encoder_decoder.py", "line": 1427, "col": 19, "module": "re", "call": "sub", "pattern": "<.*?>", "test_string": "Example likes <A>."}
{"file": "./tests/models/layoutlmv3/test_tokenization_layoutlmv3.py", "line": 1658, "col": 37, "module": "re", "call": "match", "pattern": "^[ a-zA-Z]+$", "test_string": "m"}
{"file": "./tests/utils/test_attention_visualizer.py", "line": 24, "col": 10, "module": "re", "call": "compile", "pattern": "\\x1b\\[[0-9;]*m", "test_string": "Example likes \u001b[4m."}
